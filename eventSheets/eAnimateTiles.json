{
	"name": "eAnimateTiles",
	"events": [
		{
			"eventType": "block",
			"conditions": [
				{
					"id": "on-start-of-layout",
					"objectClass": "System",
					"sid": 385966850886471
				}
			],
			"actions": [
				{
					"type": "script",
					"language": "typescript",
					"script": [
						"",
						"// 1. Initialize the system",
						"(globalThis as any).AdventureLand.TileAnimations.initialize();",
						"",
						"// 2. Get comprehensive tile data first",
						"console.log(\"üîç Analyzing all waterfall tiles...\");",
						"",
						"// 3. Configure the complete waterfall with ALL tiles from debug output",
						"(globalThis as any).AdventureLand.TileAnimations.addWaterAnimation(",
						"    \"lake_waterfall_complete\", ",
						"    \"tm_water\",",
						"    [",
						"        // ORIGINAL 9 CENTER TILES (currently working)",
						"        { x: 1, y: 2, targetIndex: 48 },  // Top row center",
						"        { x: 2, y: 2, targetIndex: 48 },",
						"        { x: 3, y: 2, targetIndex: 48 },",
						"        { x: 1, y: 3, targetIndex: 64 },  // Middle row center  ",
						"        { x: 2, y: 3, targetIndex: 64 },",
						"        { x: 3, y: 3, targetIndex: 64 },",
						"        { x: 1, y: 4, targetIndex: 80 },  // Bottom row center",
						"        { x: 2, y: 4, targetIndex: 80 },",
						"        { x: 3, y: 4, targetIndex: 80 },",
						"",
						"        // ADDITIONAL EDGE TILES (from your original debug)",
						"        // Based on your logWaterfallTiles() showing different indices:",
						"        ",
						"        // Top edge tiles (if they exist with different indices)",
						"        { x: 0, y: 2, targetIndex: 50 },  // Left edge top",
						"        { x: 4, y: 2, targetIndex: 50 },  // Right edge top",
						"        ",
						"        // Middle edge tiles",
						"        { x: 0, y: 3, targetIndex: 66 },  // Left edge middle",
						"        { x: 4, y: 3, targetIndex: 66 },  // Right edge middle",
						"        ",
						"        // Bottom edge tiles  ",
						"        { x: 0, y: 4, targetIndex: 80 },  // Left edge bottom",
						"        { x: 4, y: 4, targetIndex: 80 },  // Right edge bottom",
						"",
						"        // Corner tiles (if they exist)",
						"        { x: 1, y: 1, targetIndex: 46 },  // Top-left of waterfall",
						"        { x: 2, y: 1, targetIndex: 46 },  // Top-center ",
						"        { x: 3, y: 1, targetIndex: 46 },  // Top-right",
						"        { x: 1, y: 5, targetIndex: 82 },  // Bottom-left of waterfall",
						"        { x: 2, y: 5, targetIndex: 82 },  // Bottom-center",
						"        { x: 3, y: 5, targetIndex: 82 }   // Bottom-right",
						"    ]",
						");",
						"",
						"// 4. Debug what we actually configured",
						"console.log(\"‚úÖ Complete waterfall configuration applied\");",
						"(globalThis as any).AdventureLand.TileAnimations.debugStatus();",
						""
					]
				}
			],
			"sid": 365217793553725,
			"children": [
				{
					"eventType": "block",
					"conditions": [
						{
							"id": "for",
							"objectClass": "System",
							"sid": 309247914689624,
							"parameters": {
								"name": "\"x\"",
								"start-index": "0",
								"end-index": "tm_water.MapDisplayWidth-1"
							}
						}
					],
					"actions": [],
					"sid": 713063804339357,
					"children": [
						{
							"eventType": "block",
							"conditions": [
								{
									"id": "for",
									"objectClass": "System",
									"sid": 666024980459642,
									"parameters": {
										"name": "\"y\"",
										"start-index": "0",
										"end-index": "tm_water.MapDisplayHeight-1"
									}
								}
							],
							"actions": [],
							"sid": 491951738347021
						}
					]
				}
			]
		},
		{
			"eventType": "comment",
			"text": "Cat"
		},
		{
			"eventType": "block",
			"conditions": [
				{
					"id": "on-key-pressed",
					"objectClass": "Keyboard",
					"sid": 910923916814455,
					"parameters": {
						"key": 70
					}
				}
			],
			"actions": [
				{
					"type": "script",
					"language": "typescript",
					"script": [
						"(globalThis as any).AdventureLand.TileAnimations.debugStatus();"
					]
				}
			],
			"sid": 362873849801060
		},
		{
			"eventType": "block",
			"conditions": [
				{
					"id": "on-key-pressed",
					"objectClass": "Keyboard",
					"sid": 813668116715114,
					"parameters": {
						"key": 87
					}
				}
			],
			"actions": [
				{
					"type": "script",
					"language": "typescript",
					"script": [
						"(globalThis as any).AdventureLand.Debug.logWaterfallTiles();"
					]
				}
			],
			"sid": 297308547013491
		},
		{
			"eventType": "block",
			"conditions": [
				{
					"id": "on-key-pressed",
					"objectClass": "Keyboard",
					"sid": 469784360574674,
					"parameters": {
						"key": 90
					}
				}
			],
			"actions": [
				{
					"type": "script",
					"language": "typescript",
					"script": [
						"// EVENT: Keyboard ‚Üí On Z pressed",
						"console.log(\"AdventureLand object:\", (globalThis as any).AdventureLand);",
						"console.log(\"TileAnimations:\", (globalThis as any).AdventureLand?.TileAnimations);"
					]
				}
			],
			"sid": 848370369156074,
			"disabled": true
		},
		{
			"eventType": "block",
			"conditions": [
				{
					"id": "on-key-pressed",
					"objectClass": "Keyboard",
					"sid": 353412838075094,
					"parameters": {
						"key": 114
					}
				}
			],
			"actions": [
				{
					"type": "script",
					"language": "typescript",
					"script": [
						"console.log(\"üîç === DETAILED TILE ANALYSIS ===\");",
						"",
						"const F3runtime = (globalThis as any).runtime;",
						"if (F3runtime) {",
						"    const tilemapObject = runtime.objects.tm_water;",
						"    if (tilemapObject) {",
						"        const tilemap = tilemapObject.getFirstInstance();",
						"        if (tilemap) {",
						"            console.log(\"üìä Current tile indices in waterfall area:\");",
						"            ",
						"            // Check a wider area around the waterfall",
						"            for (let y = 1; y <= 5; y++) {",
						"                for (let x = 0; x <= 4; x++) {",
						"                    try {",
						"                        const tileIndex = tilemap.getTileAt(x, y);",
						"                        if (tileIndex > 0) {  // Only log non-empty tiles",
						"                            console.log(\"   Tile at (\" + x + \", \" + y + \"): index \" + tileIndex);",
						"                        }",
						"                    } catch (error) {",
						"                        console.log(`   Tile at (${x}, ${y}): ERROR - ${error.message}`);",
						"                    }",
						"                }",
						"            }",
						"        }",
						"    }",
						"}",
						"",
						"console.log(\"üîç === END DETAILED ANALYSIS ===\");",
						""
					]
				}
			],
			"sid": 284015392458679
		},
		{
			"eventType": "block",
			"conditions": [
				{
					"id": "on-key-pressed",
					"objectClass": "Keyboard",
					"sid": 224828842969873,
					"parameters": {
						"key": 115
					}
				}
			],
			"actions": [
				{
					"type": "script",
					"language": "typescript",
					"script": [
						"console.log(\"üß† === INTELLIGENT WATERFALL DETECTION ===\");",
						"",
						"function detectAndAnimateWaterfall() {",
						"    const F4runtime = (globalThis as any).runtime;",
						"    if (!F4runtime) return;",
						"    ",
						"    const tilemapObject = F4runtime.objects.tm_water;",
						"    if (!tilemapObject) return;",
						"    ",
						"    const tilemap = tilemapObject.getFirstInstance();  ",
						"    if (!tilemap) return;",
						"    ",
						"    const animatedTiles = [];",
						"    ",
						"    // Scan the waterfall area and detect all animated tiles",
						"    for (let y = 1; y <= 5; y++) {",
						"        for (let x = 0; x <= 4; x++) {",
						"            try {",
						"                const tileIndex = tilemap.getTileAt(x, y);",
						"                ",
						"                // Check if this tile index suggests it's part of waterfall animation",
						"                // Common waterfall tile ranges: 46-50, 62-66, 78-82",
						"                if ((tileIndex >= 46 && tileIndex <= 50) ||",
						"                    (tileIndex >= 62 && tileIndex <= 66) ||",
						"                    (tileIndex >= 78 && tileIndex <= 82)) {",
						"                    ",
						"                    // Determine base index for animation",
						"                    let baseIndex;",
						"                    if (tileIndex >= 46 && tileIndex <= 50) baseIndex = 46;",
						"                    else if (tileIndex >= 62 && tileIndex <= 66) baseIndex = 62;  ",
						"                    else if (tileIndex >= 78 && tileIndex <= 82) baseIndex = 78;",
						"                    ",
						"                    animatedTiles.push({",
						"                        x: x,",
						"                        y: y, ",
						"                        targetIndex: baseIndex",
						"                    });",
						"                    ",
						"                    console.log(`üåä Detected waterfall tile at (${x}, ${y}) with base index ${baseIndex}`);",
						"                }",
						"            } catch (error) {",
						"                // Skip tiles that can't be read",
						"            }",
						"        }",
						"    }",
						"    ",
						"    if (animatedTiles.length > 0) {",
						"        console.log(`‚úÖ Found ${animatedTiles.length} waterfall tiles to animate`);",
						"        ",
						"        // Remove old animation and add new complete one",
						"        (globalThis as any).AdventureLand.TileAnimations.cleanup();",
						"        (globalThis as any).AdventureLand.TileAnimations.initialize();",
						"        (globalThis as any).AdventureLand.TileAnimations.addWaterAnimation(",
						"            \"intelligent_waterfall\",",
						"            \"tm_water\", ",
						"            animatedTiles",
						"        );",
						"        ",
						"        console.log(\"üé¨ Intelligent waterfall animation started!\");",
						"    } else {",
						"        console.log(\"‚ùå No waterfall tiles detected\");",
						"    }",
						"}",
						"",
						"detectAndAnimateWaterfall();",
						"console.log(\"üß† === END INTELLIGENT DETECTION ===\");"
					]
				}
			],
			"sid": 844101563537588
		},
		{
			"eventType": "block",
			"conditions": [
				{
					"id": "every-x-seconds",
					"objectClass": "System",
					"sid": 115449041945347,
					"parameters": {
						"interval-seconds": ".1"
					}
				}
			],
			"actions": [
				{
					"type": "script",
					"language": "typescript",
					"script": [
						"(globalThis as any).AdventureLand.TileAnimations.optimizeByPlayer();"
					]
				}
			],
			"sid": 535469575216677,
			"disabled": true
		},
		{
			"eventType": "block",
			"conditions": [
				{
					"id": "on-end-of-layout",
					"objectClass": "System",
					"sid": 497370842162087
				}
			],
			"actions": [
				{
					"type": "script",
					"language": "typescript",
					"script": [
						"(globalThis as any).AdventureLand.TileAnimations.cleanup();"
					]
				}
			],
			"sid": 450875914375633
		}
	],
	"sid": 387743419661068
}